samplemass_inprocess$total_mass <- ifelse(is.na(samplemass_inprocess$total_mass),
samplemass_inprocess$sample_mass + samplemass_inprocess$buffer_mass,
samplemass_inprocess$total_mass)
samplemass_shelflife$total_mass <- ifelse(is.na(samplemass_shelflife$total_mass),
samplemass_shelflife$sample_mass + samplemass_shelflife$buffer_mass,
samplemass_shelflife$total_mass)
#For the microbial count data, separated the sampleID vector into unique elements/vectors (sampling, sample_id, rep)
#Created a "df" column, to store the dilution factor of the enumerated plates
inprocess <- inprocess %>%
separate(col = sampleID, into = c("sampling", "sample_id", "rep"), sep = "-") %>%
select(-c("date_plated", "date_enumerated", "photoID", "notes")) %>%
filter(!is.na(raw_count)) %>%
mutate(df = NA)
shelflife <- shelflife %>%
separate(col = sampleID, into = c("sampling", "rep", "sample_id"), sep = "_") %>%
select(-c("date_plated", "date_enumerated", "photoID", "notes", "X")) %>%
filter(!grepl("BHI", test)) %>%
filter(!is.na(raw_count)) %>%
mutate(df = NA)
#Only one plate replicate was below the detection limit: sample_id "D", replicate "B", test "M", plate rep "1".
#No need for substituting the detection limit, since the other plate replicate was above the detection limit.
#The microbial concentrations from both plate replicates will be averaged, to calculate the microbial concentration of the
#sample replicate.
table(inprocess$raw_count == "0")
table(shelflife$raw_count == "0")
#Checking whether both plate replicate were enumerated from the same dilution
#If so, the raw counts can be averaged and then the microbial concentration can be calculated
inprocess %>%
group_by(sample_id, rep, test) %>%
mutate(same_dilution = dilution[1] == dilution[2]) %>%
with(table(same_dilution))
shelflife %>%
group_by(sample_id, rep, test) %>%
mutate(same_dilution = dilution[1] == dilution[2]) %>%
with(table(same_dilution))
#Identifying which of the enumerated plate replicates from the shelf life data set
#were not from the same dilution in the shelf life data set
shelflife_check <- shelflife %>%
group_by(sample_id, rep, test) %>%
mutate(same_dilution = dilution[1] == dilution[2])
shelflife[(shelflife_check$same_dilution == "FALSE"), ]
#Defining a function for calculating the dilution factor
dilution_factor_func <- function(x, y, z){
#x = sample mass, y = sample mass + buffer mass (i.e., total mass), z = dilution of enumerated plate
first_dilution = log10(y/x)
dilution_plated = z
dilution_factor = 10^(first_dilution + (dilution_plated - 1))
return(dilution_factor)
}
#Calculating the dilution factor for each plate replicate
for(i in 1:nrow(inprocess)){
row_index <- which(inprocess$sample_id[i] == samplemass_inprocess$sample_id & inprocess$rep[i] == samplemass_inprocess$rep)
inprocess$df[i] <- dilution_factor_func(samplemass_inprocess$sample_mass[row_index], samplemass_inprocess$total_mass[row_index], inprocess$dilution[i])
}
for(i in 1:nrow(shelflife)){
row_index <- which(shelflife$sample_id[i] == samplemass_shelflife$sample_id & shelflife$rep[i] == samplemass_shelflife$rep)
shelflife$df[i] <- dilution_factor_func(samplemass_shelflife$sample_mass[row_index], samplemass_shelflife$total_mass[row_index], shelflife$dilution[i])
}
#Calculating the microbial concentration for each sample, by multiplying the raw count with the dilution factor
inprocess <- inprocess %>%
mutate(conc = raw_count * df)
shelflife <- shelflife %>%
mutate(conc = raw_count * df)
#Averaging the microbial concentration for each sample replicate, by microbiological test. I.e., the microbial concentrations
#that were calculated based on plate replicates are averaged, to obtain a single concentration for each sample replicate
#and microbiological test
inprocess_final <- inprocess %>%
group_by(sample_id, rep, test) %>%
mutate(average_conc = mean(conc)) %>%
distinct(sample_id, rep, test, .keep_all = TRUE) %>%
select(-c("plate_rep", "df", "dilution", "raw_count", "conc")) %>%
filter(!grepl("NS", rep))
shelflife_final <- shelflife %>%
group_by(sample_id, rep, test) %>%
mutate(average_conc = mean(conc)) %>%
distinct(sample_id, rep, test, .keep_all = TRUE) %>%
select(-c("plate_rep", "df", "dilution", "raw_count", "conc"))
inprocess_final_plotting <- inprocess_final %>%
mutate(log_conc = log10(average_conc))
inprocess_final_plotting$sample_id <- factor(inprocess_final_plotting$sample_id, levels = c("H", "T", "V", "S", "W", "D"))
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(ggplot2); library(dplyr)
spinachmass <- read.csv("data/raw/0919A_Sample_Mass.csv", header = TRUE)
inprocess <- read.csv("data/raw/PlateCountData_PilotSampling_InProcessSamples_Sept2019_101019_parsed_2022_08_23.csv", header = TRUE)
shelflife <- read.csv("data/raw/PlateCountData_PilotSampling_ShelfLifeSamples_Sept2019_102619_parsed_2022_08_23.csv", header = TRUE)
#Subsetting sample mass data by in-process or shelf life
samplemass_inprocess <- spinachmass[1:22, ]
samplemass_shelflife <- spinachmass[23:55, ]
#For sample mass data, splitting the sampleID vector into unique elements/vectors (sampling, sample_id, rep)
samplemass_inprocess <- samplemass_inprocess %>%
separate(col = sampleID, into = c("sampling", "sample_id", "rep"), sep = "_")
samplemass_shelflife <- samplemass_shelflife %>%
separate(col = sampleID, into = c("sampling", "rep", "sample_id"), sep = "_")
#If the spinach was weighed directly into the bag, calculating the total mass of the bag by adding the sample mass with the buffer mass
#The total bag mass will be used for downstream analysis
samplemass_inprocess$total_mass <- ifelse(is.na(samplemass_inprocess$total_mass),
samplemass_inprocess$sample_mass + samplemass_inprocess$buffer_mass,
samplemass_inprocess$total_mass)
samplemass_shelflife$total_mass <- ifelse(is.na(samplemass_shelflife$total_mass),
samplemass_shelflife$sample_mass + samplemass_shelflife$buffer_mass,
samplemass_shelflife$total_mass)
#For the microbial count data, separated the sampleID vector into unique elements/vectors (sampling, sample_id, rep)
#Created a "df" column, to store the dilution factor of the enumerated plates
inprocess <- inprocess %>%
separate(col = sampleID, into = c("sampling", "sample_id", "rep"), sep = "-") %>%
select(-c("date_plated", "date_enumerated", "photoID", "notes")) %>%
filter(!is.na(raw_count)) %>%
mutate(df = NA)
shelflife <- shelflife %>%
separate(col = sampleID, into = c("sampling", "rep", "sample_id"), sep = "_") %>%
select(-c("date_plated", "date_enumerated", "photoID", "notes", "X")) %>%
filter(!grepl("BHI", test)) %>%
filter(!is.na(raw_count)) %>%
mutate(df = NA)
#Only one plate replicate was below the detection limit: sample_id "D", replicate "B", test "M", plate rep "1".
#No need for substituting the detection limit, since the other plate replicate was above the detection limit.
#The microbial concentrations from both plate replicates will be averaged, to calculate the microbial concentration of the
#sample replicate.
table(inprocess$raw_count == "0")
table(shelflife$raw_count == "0")
#Checking whether both plate replicate were enumerated from the same dilution
#If so, the raw counts can be averaged and then the microbial concentration can be calculated
inprocess %>%
group_by(sample_id, rep, test) %>%
mutate(same_dilution = dilution[1] == dilution[2]) %>%
with(table(same_dilution))
shelflife %>%
group_by(sample_id, rep, test) %>%
mutate(same_dilution = dilution[1] == dilution[2]) %>%
with(table(same_dilution))
#Identifying which of the enumerated plate replicates from the shelf life data set
#were not from the same dilution in the shelf life data set
shelflife_check <- shelflife %>%
group_by(sample_id, rep, test) %>%
mutate(same_dilution = dilution[1] == dilution[2])
shelflife[(shelflife_check$same_dilution == "FALSE"), ]
#Defining a function for calculating the dilution factor
dilution_factor_func <- function(x, y, z){
#x = sample mass, y = sample mass + buffer mass (i.e., total mass), z = dilution of enumerated plate
first_dilution = log10(y/x)
dilution_plated = z
dilution_factor = 10^(first_dilution + (dilution_plated - 1))
return(dilution_factor)
}
#Calculating the dilution factor for each plate replicate
for(i in 1:nrow(inprocess)){
row_index <- which(inprocess$sample_id[i] == samplemass_inprocess$sample_id & inprocess$rep[i] == samplemass_inprocess$rep)
inprocess$df[i] <- dilution_factor_func(samplemass_inprocess$sample_mass[row_index], samplemass_inprocess$total_mass[row_index], inprocess$dilution[i])
}
for(i in 1:nrow(shelflife)){
row_index <- which(shelflife$sample_id[i] == samplemass_shelflife$sample_id & shelflife$rep[i] == samplemass_shelflife$rep)
shelflife$df[i] <- dilution_factor_func(samplemass_shelflife$sample_mass[row_index], samplemass_shelflife$total_mass[row_index], shelflife$dilution[i])
}
#Calculating the microbial concentration for each sample, by multiplying the raw count with the dilution factor
inprocess <- inprocess %>%
mutate(conc = raw_count * df)
shelflife <- shelflife %>%
mutate(conc = raw_count * df)
#Averaging the microbial concentration for each sample replicate, by microbiological test. I.e., the microbial concentrations
#that were calculated based on plate replicates are averaged, to obtain a single concentration for each sample replicate
#and microbiological test
inprocess_final <- inprocess %>%
group_by(sample_id, rep, test) %>%
mutate(average_conc = mean(conc)) %>%
distinct(sample_id, rep, test, .keep_all = TRUE) %>%
select(-c("plate_rep", "df", "dilution", "raw_count", "conc")) %>%
filter(!grepl("NS", rep))
shelflife_final <- shelflife %>%
group_by(sample_id, rep, test) %>%
mutate(average_conc = mean(conc)) %>%
distinct(sample_id, rep, test, .keep_all = TRUE) %>%
select(-c("plate_rep", "df", "dilution", "raw_count", "conc"))
wrangled_counts <- bind_rows(inprocess_final, shelflife_final)
date <- Sys.Date()
date <- gsub("-", "_", date)
write.csv(wrangled_counts, paste0("data/wrangled/0919a_microbial_counts_", date, ".csv"), row.names = FALSE)
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(dplyr)
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
View(data)
##-------------------------------Wrangling--------------------------------------
#Taking the geometrci average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc))
View(data_log)
data_ave_summary <- data_log %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
summarize(average = mean(log_conc), sd = sd(log_conc))
View(data_ave_summary)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
View(inprocess)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
90 + 165
summary_inprocess <- inprocess %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
summarize(average = mean(log_conc), sd = sd(log_conc))
summary_inprocess <- inprocess %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
filter(max(log_conc) | min(log_conc))
View(summary_inprocess)
summary_inprocess <- inprocess %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
summarize(average = mean(log_conc), sd = sd(log_conc))
View(summary_inprocess)
high_low_inprocess <- summary_inprocess %>%
group_by(test, sample_id) %>%
summarize(max(average))
View(summary_inprocess)
View(high_low_inprocess)
high_low_inprocess <- summary_inprocess %>%
group_by(test, sample_id) %>%
filter(max(average))
slice(1)
summary_inprocess <- inprocess %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
summarize(average = mean(log_conc), sd = sd(log_conc))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average))
View(high_inprocess)
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
View(low_inprocess)
summary_inprocess <- inprocess %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
View(high_inprocess)
high_shelflife <- shelflife %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
high_shelflife <- shelflife %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
summary_shelflife <- shelflife %>%
select(-average_conc) %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_shelflife <- summary_shelflife %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
View(high_shelflife)
#Calculating the absolute increase in microbial counts by test
summary_abs_shelflife <- summary_shelflife %>%
group_by(test) %>%
summarize(absolute_increase = max(average) - min(average))
View(summary_abs_shelflife)
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(dplyr)
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
##-------------------------------Wrangling--------------------------------------
#Taking the geometric average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
summary_inprocess
View(summary_inprocess)
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
summary_shelflife <- shelflife %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
View(summary_shelflife)
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(dplyr)
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
##-------------------------------Wrangling--------------------------------------
#Taking the geometric average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
summary_shelflife <- shelflife %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_shelflife <- summary_shelflife %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
#Calculating the absolute increase in microbial counts by test
summary_abs_shelflife <- summary_shelflife %>%
group_by(test) %>%
summarize(absolute_increase = max(average) - min(average))
date <- Sys.Date()
date <- gsub("-", "_", date)
date
date <- Sys.Date()
date <- gsub("-", "_", date)
write.csv(summary_inprocess, paste0("outputs/summary_inprocess_", date, ".csv"))
write.csv(summary_shelflife, paste0("outputs/summary_shelflife_", date, ".csv"))
?strsplit
strsplit(D10)
strsplit("D10")
strsplit("D10", "")
strsplit("D10", "")[2:nchar(D10)]
strsplit("D10", "")[2:nchar("D10")]
strsplit("D10", "")[2:3]
strsplit("D10", "")[[2:3]]
strsplit("D10", "")
strsplit("D10", "")[]
strsplit("D10", "")[2]
strsplit("D10", "")[1]
strsplit("D10", "")[1][2]
strsplit("D10", "")[1]
c(strsplit("D10", "")[1])
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(dplyr); library(stringr)
substr("D10", start = 2)
substr("D10", start = 2, stop = nchar("D10"))
summary_shelflife <- shelflife %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2)) %>%
mutate(day <- substr(sample_id, start = 2, stop = nchar(sample_id)))
View(summary_shelflife)
summary_shelflife <- shelflife %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2)) %>%
mutate(day = substr(sample_id, start = 2, stop = nchar(sample_id)))
high_shelflife <- summary_shelflife %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
#Calculating the absolute increase in microbial counts by test
summary_abs_shelflife <- summary_shelflife %>%
group_by(test) %>%
summarize(absolute_increase = max(average) - min(average))
date <- Sys.Date()
date <- gsub("-", "_", date)
write.csv(summary_inprocess, paste0("outputs/summary_inprocess_", date, ".csv"))
write.csv(summary_shelflife, paste0("outputs/summary_shelflife_", date, ".csv"))
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
##-------------------------------Wrangling--------------------------------------
#Taking the geometric average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
summary_shelflife <- shelflife %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2)) %>%
mutate(day = substr(sample_id, start = 2, stop = nchar(sample_id)))
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(dplyr); library(stringr)
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
##-------------------------------Wrangling--------------------------------------
#Taking the geometric average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
View(shelflife)
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
##-------------------------------Wrangling--------------------------------------
#Taking the geometric average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
## ----------------------Packages-----------------------------------------------
library(tidyverse); library(dplyr); library(stringr)
## --------------------------------Data-----------------------------------------
#Reading in the data
data <- read.csv("data/wrangled/0919a_microbial_counts_2023_01_27.csv", header = TRUE)
##-------------------------------Wrangling--------------------------------------
#Taking the geometric average and mean of the sample replicates
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
high_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
View(summary_inprocess)
4.72 - 3.16
4.11 - 2.37
low_inprocess <- summary_inprocess %>%
group_by(test) %>%
arrange(average) %>%
slice(1)
summary_shelflife <- shelflife %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2)) %>%
mutate(day = substr(sample_id, start = 2, stop = nchar(sample_id)))
View(summary_shelflife)
high_shelflife <- summary_shelflife %>%
group_by(test) %>%
arrange(desc(average)) %>%
slice(1)
#Calculating the absolute increase in microbial counts by test
summary_abs_shelflife <- summary_shelflife %>%
group_by(test) %>%
summarize(absolute_increase = max(average) - min(average))
View(summary_abs_shelflife)
