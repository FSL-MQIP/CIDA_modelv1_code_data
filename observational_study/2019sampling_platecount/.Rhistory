"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme(axis.text.x = element_text(size = 24),
axis.text.y = element_text(size = 24)) +
ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme(axis.text.x = element_text(size = 24),
axis.text.y = element_text(size = 24)) +
theme_classic() + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 24),
axis.text.y = element_text(size = 24)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
png(paste0("outputs/microbial_population_over_shelf_life.png"), width = 150, height = 150, units = "mm", res = 1000)
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
dev.off()
## ----------------------Packages-----------------------------------------------
library(ggplot2); library(dplyr); library(ggpubr)
## --------------------------------Data-----------------------------------------
data <- read.csv("data/0919a_microbial_counts.csv", header = TRUE)
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
setwd("/Volumes/BoorWiedmannLab/ss2633_Sriya_Sunil/Administrative/Papers/Paper1_cida_model_v1/analyses/github_data_code/CIDA_modelv1_code_data/observational_study/2019sampling_platecount")
## ----------------------Packages-----------------------------------------------
library(ggplot2); library(dplyr); library(ggpubr)
## --------------------------------Data-----------------------------------------
data <- read.csv("data/0919a_microbial_counts.csv", header = TRUE)
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples)) %>%
mutate(day = substr(sample_id, start = 2, stop = nchar(sample_id)))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
summary_inprocess$sample_id <- factor(summary_inprocess$sample_id,
levels = c("H", "T", "V", "S", "W", "D"))
summary_inprocess$test <- gsub("Y", "YC", summary_inprocess$test)
summary_inprocess$test <- gsub("M", "MC", summary_inprocess$test)
summary_shelflife <- shelflife %>%
group_by(test, sample_id, day) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
summary_shelflife$day <- factor(summary_shelflife$day,
levels = c("0", "2", "4", "6", "8", "10", "12", "14", "16", "18", "20"))
colnames(summary_shelflife)[1] <- "Test"
summary_shelflife$Test <- gsub("Y", "YC", summary_shelflife$Test)
summary_shelflife$Test <- gsub("M", "MC", summary_shelflife$Test)
#In process
inprocess <- ggplot(data = summary_inprocess, mapping = aes(x=sample_id, y=average, group = test)) +
labs(x = "Step in the Supply Chain", y = expression("Microbial concentration, log"[10]*"CFU/g")) +
scale_y_continuous(limits = c(1.5, 7.5)) + geom_point(position = position_dodge(0.3), aes(shape = test, group = test) ) +
geom_errorbar(aes(ymin = average - 0.5*sd, ymax = average + 0.5*sd), width = 0.01, position = position_dodge(0.3)) +
scale_shape_manual(values = c(0, 1, 2, 5, 6)) + labs(shape = "Test") + theme_bw()
#Shelf life
shelf_life <- ggplot(data = summary_shelflife, mapping = aes(x = day, y = average, group = Test)) +
geom_line(data = summary_shelflife, aes(x = day, y = average, group = Test, linetype = Test)) +
geom_point(position = position_dodge(0.3), aes(shape = Test)) +
geom_errorbar(aes(ymin = average - 0.5*sd, ymax = average + 0.5*sd), width = 0.01, position = position_dodge(0.3)) +
labs(x = "Day", y = expression("Microbial concentration, log"[10]*"CFU/g")) +
theme_bw() +
scale_shape_manual(values = c(0, 1, 2, 5, 6))
#In process
inprocess <- ggplot(data = summary_inprocess, mapping = aes(x=sample_id, y=average, group = test)) +
labs(x = "Step in the Supply Chain", y = expression("Microbial concentration, log"[10]*"CFU/g")) +
scale_y_continuous(limits = c(1.5, 7.5)) + geom_point(position = position_dodge(0.3), aes(shape = test, group = test) ) +
geom_errorbar(aes(ymin = average - 0.5*sd, ymax = average + 0.5*sd), width = 0.01, position = position_dodge(0.3)) +
scale_shape_manual(values = c(0, 1, 2, 5, 6)) + labs(shape = "Test") + theme_bw()
#Shelf life
shelf_life <- ggplot(data = summary_shelflife, mapping = aes(x = day, y = average, group = Test)) +
geom_line(data = summary_shelflife, aes(x = day, y = average, group = Test, linetype = Test)) +
geom_point(position = position_dodge(0.3), aes(shape = Test)) +
geom_errorbar(aes(ymin = average - 0.5*sd, ymax = average + 0.5*sd), width = 0.01, position = position_dodge(0.3)) +
labs(x = "Day", y = expression("Microbial concentration, log"[10]*"CFU/g")) +
theme_bw() +
scale_shape_manual(values = c(0, 1, 2, 5, 6))
png(paste0("outputs/microbial_counts_obs_study.png"), width = 150, height = 100, units = "mm", res = 1000)
ggarrange(inprocess, shelf_life + rremove("ylab"), ncol = 2, common.legend = TRUE, labels = c("A", "B"))
dev.off()
setwd("/Volumes/BoorWiedmannLab/ss2633_Sriya_Sunil/Administrative/Papers/Paper1_cida_model_v1/analyses/github_data_code/CIDA_modelv1_code_data/monte_carlo_simulation/sensitivity_analysis/sa_analysis_outcome_plotting")
#   Loading packages
library(dplyr); library(tidyverse); library(ggplot2); library(RColorBrewer); library(forcats)
b_mumax <- read.csv("sa_outcome/sa_b_mumax_threshold.csv", header = T)
lag_tmin <- read.csv("sa_outcome/sa_lag_tmin_threshold.csv", header = T)
mumax_tmin <- read.csv("sa_outcome/sa_mumax_tmin_threshold.csv", header = T)
mumax <- read.csv("sa_outcome/sa_mumax_threshold.csv", header = T)
n0 <- read.csv("sa_outcome/sa_n0_threshold.csv", header = T)
nmax <- read.csv("sa_outcome/sa_nmax_threshold.csv", header = T)
strain_no <- read.csv("sa_outcome/sa_strain_no_threshold.csv", header = T)
strain_type <- read.csv("sa_outcome/sa_strain_type_threshold.csv", header = T)
lag <- read.csv("sa_outcome/lag_threshold.csv", header = T)
df <- rbind(b_mumax, mumax_tmin, lag_tmin, mumax, n0, nmax, strain_type, lag)
df["baseline"] <- ifelse(df$adj == 1.0, "y", "n")
df$param <- as.factor(df$param)
df <- df %>%
mutate(percent_fail = prop_spoiled*100) %>%
group_by(param, day) %>%
mutate(dev_baseline = percent_fail - percent_fail[baseline == "y"]) %>%
ungroup()
df <- df %>%
group_by(day, param) %>%
mutate(dev_baseline_rel = case_when(
adj == 0.4 ~ dev_baseline - dev_baseline[adj == 0.6],
adj == 0.6 ~ dev_baseline - dev_baseline[adj == 0.8],
adj == 0.8  ~ dev_baseline - dev_baseline[adj == 1.0],
adj == 1.2 ~ dev_baseline - dev_baseline[adj == 1.0],
adj == 1.4 ~ dev_baseline - dev_baseline[adj == 1.2],
adj == 1.6 ~ dev_baseline - dev_baseline[adj == 1.4]
))
df$adj <- as.factor(df$adj)
df$adj <- recode(df$adj, "0.4" = "l_60",
"0.6" = "l_40",
"0.8" = "l_20",
"1" = "b",
"1.2" = "u_20",
"1.4" = "u_40",
"1.6" = "u_60")
day_18 <- filter(df, day == "18")  %>%
filter(adj != "b") %>%
arrange(desc(adj))
day_18_summary <- day_18 %>%
group_by(param) %>%
summarise(range = abs(percent_fail[adj == "u_60"] - percent_fail[adj == "l_60"]))
day_18$param <- factor(day_18$param, levels = c("lag_tmin", "fastest_strain_s12_0141", "lag","highest_nmax_s12_0166", "mumax", "mumax_tmin","b_mumax", "n0", "nmax"))
day_18$adj <- factor(day_18$adj, levels = c("l_60", "l_40", "l_20", "u_60", "u_40", "u_20"))
strain_no <- strain_no %>%
mutate(percent_spoiled = prop_spoiled*100)
strain_no_overall_plotting_data <- strain_no
strain_no_overall_plotting_data$day <- as.factor(strain_no_overall_plotting_data$day)
cols <- brewer.pal(6, "PRGn")
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) +
scale_x_discrete(labels = c(expression("T"["min, "]*lambda), expression("Strain type: FSL S12-0141"), expression(lambda), expression("Strain type: FSL S12-0166"), expression(mu["max"]), expression("T"["min, "]*mu[max]), expression("b"[mu[max]]), expression("N"[0]), expression("N"["max"])))
day18_tornado_plot + coord_flip() + theme_bw()
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) +
theme(x.axis.text = element_text(size = 12),
y.axis.text = element_text(size = 12)) +
scale_x_discrete(labels = c(expression("T"["min, "]*lambda), expression("Strain type: FSL S12-0141"), expression(lambda), expression("Strain type: FSL S12-0166"), expression(mu["max"]), expression("T"["min, "]*mu[max]), expression("b"[mu[max]]), expression("N"[0]), expression("N"["max"])))
day18_tornado_plot + coord_flip() + theme_bw()
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) + theme_bw()
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) + theme_bw() +
theme(x.axis.text = element_text(size = 12),
y.axis.text = element_text(size = 12)) +
scale_x_discrete(labels = c(expression("T"["min, "]*lambda), expression("Strain type: FSL S12-0141"), expression(lambda), expression("Strain type: FSL S12-0166"), expression(mu["max"]), expression("T"["min, "]*mu[max]), expression("b"[mu[max]]), expression("N"[0]), expression("N"["max"])))
day18_tornado_plot + coord_flip()
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) + theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)) +
scale_x_discrete(labels = c(expression("T"["min, "]*lambda), expression("Strain type: FSL S12-0141"), expression(lambda), expression("Strain type: FSL S12-0166"), expression(mu["max"]), expression("T"["min, "]*mu[max]), expression("b"[mu[max]]), expression("N"[0]), expression("N"["max"])))
day18_tornado_plot + coord_flip()
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) + theme_bw() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
scale_x_discrete(labels = c(expression("T"["min, "]*lambda), expression("Strain type: FSL S12-0141"), expression(lambda), expression("Strain type: FSL S12-0166"), expression(mu["max"]), expression("T"["min, "]*mu[max]), expression("b"[mu[max]]), expression("N"[0]), expression("N"["max"])))
day18_tornado_plot + coord_flip()
day18_tornado_plot <- ggplot(data = day_18, aes(x = param, y = dev_baseline_rel)) +
geom_bar(aes(fill = adj), stat = "identity", color = "black") +
labs(x = "Parameter", y = "Change in packages over the quality threshold, percentage points") +
scale_fill_manual(values = cols, labels = c("Decrease, 60%", "Decrease, 40%", "Decrease, 20%", "Increase, 60%", "Increase, 40%", "Increase, 20%")) +
guides(fill = guide_legend(title = "Percent change")) + theme_bw() +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_discrete(labels = c(expression("T"["min, "]*lambda), expression("Strain type: FSL S12-0141"), expression(lambda), expression("Strain type: FSL S12-0166"), expression(mu["max"]), expression("T"["min, "]*mu[max]), expression("b"[mu[max]]), expression("N"[0]), expression("N"["max"])))
day18_tornado_plot + coord_flip()
strain_no_overall_plot_spoil <- ggplot(data = strain_no_overall_plotting_data, aes(x = day, y = percent_spoiled, group = adj)) +
geom_point(aes(shape = adj)) + scale_shape_manual(values = c(0:6)) +
labs(x = "Day", y = "Percentage of packages over the quality threshold") +
guides(shape = guide_legend(title = "Number of strains")) + theme_bw()
strain_no_overall_plot_spoil
pdf("tornado_plot_d18_threshold.pdf")
day18_tornado_plot + coord_flip() + theme_minimal()
dev.off()
pdf("strain_no_spoiled_threshold.pdf")
strain_no_overall_plot_spoil
dev.off()
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
library(tidyverse); library(ggplot2); library(stringi);
data <- read.csv("data/0919a_isolates_fsl_previd.csv", header = TRUE)
data <- data %>%
separate(Previous.ID, c("sampling", "sample_name", "day", "media", "isolate_number"), sep = "-") %>%
separate(subject.titles, c("genus", "species", NA, NA, NA, NA), sep = " ", extra = "drop")
data$day <- stri_replace_all_regex(data$day,
pattern = c("D0", "D4", "D10", "D20"),
replacement = c(0, 4, 10, 20),
vectorize_all = FALSE)
data$day <- factor(data$day, levels = c("0", "4", "10", "20"))
setwd("/Volumes/BoorWiedmannLab/ss2633_Sriya_Sunil/Administrative/Papers/Paper1_cida_model_v1/analyses/github_data_code/CIDA_modelv1_code_data/observational_study/2019_isolates")
library(tidyverse); library(ggplot2); library(stringi);
data <- read.csv("data/0919a_isolates_fsl_previd.csv", header = TRUE)
data <- data %>%
separate(Previous.ID, c("sampling", "sample_name", "day", "media", "isolate_number"), sep = "-") %>%
separate(subject.titles, c("genus", "species", NA, NA, NA, NA), sep = " ", extra = "drop")
data$day <- stri_replace_all_regex(data$day,
pattern = c("D0", "D4", "D10", "D20"),
replacement = c(0, 4, 10, 20),
vectorize_all = FALSE)
data$day <- factor(data$day, levels = c("0", "4", "10", "20"))
freq <- data.frame(table(data$genus, data$day))
colnames(freq) <- c("genus", "day", "freq")
freq_plot_data <- freq %>%
filter(freq != 0)
freq_table <- table(data$genus, data$day)
#Color plot
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme_classic() + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
#Greyscale plot
angle1 <- rep(c(0, 45,45,135), length.out=10)
angle2 <- rep(c(0, 45,135,135), length.out=10)
density1 <- seq(5,20,length.out=10)
density2 <- seq(5,20,length.out=10)
col <- 1
barplot(freq_table, col = col, angle = angle1, density = density1)
barplot(freq_table, col = col, angle = angle2, density = density2)
legend("topright", legend=1:10, ncol =1, fill=TRUE, col=col, angle=angle1, density=density1)
par(bg="transparent")
legend("topright", legend=1:10, ncol =1, fill=TRUE, col=col, angle=angle2, density=density2)
par(op)
png(paste0("outputs/microbial_population_over_shelf_life.png"), width = 150, height = 150, units = "mm", res = 1000)
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
dev.off()
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
#Color plot
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme_classic() + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
library(tidyverse); library(ggplot2); library(stringi);
data <- read.csv("data/0919a_isolates_fsl_previd.csv", header = TRUE)
data <- data %>%
separate(Previous.ID, c("sampling", "sample_name", "day", "media", "isolate_number"), sep = "-") %>%
separate(subject.titles, c("genus", "species", NA, NA, NA, NA), sep = " ", extra = "drop")
data$day <- stri_replace_all_regex(data$day,
pattern = c("D0", "D4", "D10", "D20"),
replacement = c(0, 4, 10, 20),
vectorize_all = FALSE)
data$day <- factor(data$day, levels = c("0", "4", "10", "20"))
freq <- data.frame(table(data$genus, data$day))
colnames(freq) <- c("genus", "day", "freq")
freq_plot_data <- freq %>%
filter(freq != 0)
freq_table <- table(data$genus, data$day)
#Color plot
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme_classic() + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
#Greyscale plot
angle1 <- rep(c(0, 45,45,135), length.out=10)
angle2 <- rep(c(0, 45,135,135), length.out=10)
density1 <- seq(5,20,length.out=10)
density2 <- seq(5,20,length.out=10)
col <- 1
barplot(freq_table, col = col, angle = angle1, density = density1)
barplot(freq_table, col = col, angle = angle2, density = density2)
legend("topright", legend=1:10, ncol =1, fill=TRUE, col=col, angle=angle1, density=density1)
par(bg="transparent")
legend("topright", legend=1:10, ncol =1, fill=TRUE, col=col, angle=angle2, density=density2)
par(op)
#Color plot
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme_classic() + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
library(tidyverse); library(ggplot2); library(stringi); library(ragg)
data <- read.csv("data/0919a_isolates_fsl_previd.csv", header = TRUE)
data <- data %>%
separate(Previous.ID, c("sampling", "sample_name", "day", "media", "isolate_number"), sep = "-") %>%
separate(subject.titles, c("genus", "species", NA, NA, NA, NA), sep = " ", extra = "drop")
data$day <- stri_replace_all_regex(data$day,
pattern = c("D0", "D4", "D10", "D20"),
replacement = c(0, 4, 10, 20),
vectorize_all = FALSE)
data$day <- factor(data$day, levels = c("0", "4", "10", "20"))
freq <- data.frame(table(data$genus, data$day))
colnames(freq) <- c("genus", "day", "freq")
freq_plot_data <- freq %>%
filter(freq != 0)
freq_table <- table(data$genus, data$day)
#Color plot
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +
theme_classic() + ylab("Number of isolates") + xlab("Day") +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
#Greyscale plot
angle1 <- rep(c(0, 45,45,135), length.out=10)
angle2 <- rep(c(0, 45,135,135), length.out=10)
density1 <- seq(5,20,length.out=10)
density2 <- seq(5,20,length.out=10)
col <- 1
barplot(freq_table, col = col, angle = angle1, density = density1)
barplot(freq_table, col = col, angle = angle2, density = density2)
legend("topright", legend=1:10, ncol =1, fill=TRUE, col=col, angle=angle1, density=density1)
par(bg="transparent")
legend("topright", legend=1:10, ncol =1, fill=TRUE, col=col, angle=angle2, density=density2)
par(op)
agg_tiff(paste0("outputs/microbial_population_over_shelf_life.tiff"), width = 150, height = 150, units = "mm", res = 1200)
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
ylab("Number of isolates") + xlab("Day") +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = rel(1.2)),
axis.title.y = element_text(size = rel(1.2))) +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
dev.off()
agg_tiff(paste0("outputs/microbial_population_over_shelf_life.tiff"), width = 150, height = 150, units = "mm", res = 800)
ggplot(data = freq_plot_data, mapping = aes(x = day, y = freq, fill = genus, label = freq)) +
geom_col(position = "stack", color = "black") +  theme_classic() +
ylab("Number of isolates") + xlab("Day") +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = rel(1.2)),
axis.title.y = element_text(size = rel(1.2))) +
labs(fill = "Genus") + scale_fill_manual(values = c("#AE76A3","#1965B0", "#5289C7", "#1E9F02",
"#CAE0AB", "#F7F056", "#F6C141","#F1932D", "#E8601C",
"#AFADAD")) +
geom_text(position = position_stack(vjust = 0.5))
dev.off()
## ----------------------Packages-----------------------------------------------
library(ggplot2); library(dplyr); library(ggpubr); library(ragg)
## --------------------------------Data-----------------------------------------
data <- read.csv("data/0919a_microbial_counts.csv", header = TRUE)
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples)) %>%
mutate(day = substr(sample_id, start = 2, stop = nchar(sample_id)))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
summary_inprocess$sample_id <- factor(summary_inprocess$sample_id,
levels = c("H", "T", "V", "S", "W", "D"))
setwd("/Volumes/BoorWiedmannLab/ss2633_Sriya_Sunil/Administrative/Papers/Paper1_cida_model_v1/analyses/github_data_code/CIDA_modelv1_code_data/observational_study/2019sampling_platecount")
## ----------------------Packages-----------------------------------------------
library(ggplot2); library(dplyr); library(ggpubr); library(ragg)
## --------------------------------Data-----------------------------------------
data <- read.csv("data/0919a_microbial_counts.csv", header = TRUE)
data_log <- data %>%
mutate(log_conc = log10(average_conc)) %>%
dplyr::select(-average_conc)
inprocess_samples <- c("H", "T", "V", "S", "W", "D")
inprocess <- data_log %>%
filter(sample_id %in% inprocess_samples)
shelflife <- data_log %>%
filter(!(sample_id %in% inprocess_samples)) %>%
mutate(day = substr(sample_id, start = 2, stop = nchar(sample_id)))
summary_inprocess <- inprocess %>%
group_by(test, sample_id) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
summary_inprocess$sample_id <- factor(summary_inprocess$sample_id,
levels = c("H", "T", "V", "S", "W", "D"))
summary_inprocess$test <- gsub("Y", "YC", summary_inprocess$test)
summary_inprocess$test <- gsub("M", "MC", summary_inprocess$test)
summary_shelflife <- shelflife %>%
group_by(test, sample_id, day) %>%
summarize(average = round(mean(log_conc), 2), sd = round(sd(log_conc), 2))
summary_shelflife$day <- factor(summary_shelflife$day,
levels = c("0", "2", "4", "6", "8", "10", "12", "14", "16", "18", "20"))
colnames(summary_shelflife)[1] <- "Test"
summary_shelflife$Test <- gsub("Y", "YC", summary_shelflife$Test)
summary_shelflife$Test <- gsub("M", "MC", summary_shelflife$Test)
#In process
inprocess <- ggplot(data = summary_inprocess, mapping = aes(x=sample_id, y=average, group = test)) +
labs(x = "Step in the Supply Chain", y = expression("Microbial concentration, log"[10]*"CFU/g")) +
scale_y_continuous(limits = c(1.5, 7.5)) + geom_point(position = position_dodge(0.3), aes(shape = test, group = test) ) +
geom_errorbar(aes(ymin = average - 0.5*sd, ymax = average + 0.5*sd), width = 0.01, position = position_dodge(0.3)) +
scale_shape_manual(values = c(0, 1, 2, 5, 6)) + labs(shape = "Test") + theme_bw()
#Shelf life
shelf_life <- ggplot(data = summary_shelflife, mapping = aes(x = day, y = average, group = Test)) +
geom_line(data = summary_shelflife, aes(x = day, y = average, group = Test, linetype = Test)) +
geom_point(position = position_dodge(0.3), aes(shape = Test)) +
geom_errorbar(aes(ymin = average - 0.5*sd, ymax = average + 0.5*sd), width = 0.01, position = position_dodge(0.3)) +
labs(x = "Day", y = expression("Microbial concentration, log"[10]*"CFU/g")) +
theme_bw() +
scale_shape_manual(values = c(0, 1, 2, 5, 6))
agg_tiff(paste0("outputs/microbial_counts_obs_study.tiff"), width = 6, height = 4, units = "in", res = 1200)
ggarrange(inprocess, shelf_life + rremove("ylab"), ncol = 2, common.legend = TRUE, labels = c("A", "B"))
dev.off()
agg_tiff(paste0("outputs/microbial_counts_obs_study.tiff"), width = 6, height = 4, units = "in", res = 800)
ggarrange(inprocess, shelf_life + rremove("ylab"), ncol = 2, common.legend = TRUE, labels = c("A", "B"))
dev.off()
