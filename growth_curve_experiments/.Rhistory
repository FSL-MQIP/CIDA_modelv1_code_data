strain_p3_6 <- ggplot(data = b141_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep))  +
geom_line(data = b141_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) +
labs(title = "S12-0141") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p4_6 <- ggplot(data = b166_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b166_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0166") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p5_6 <- ggplot(data = b180_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b180_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0180") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p6_6 <- ggplot(data = b184_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b184_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0184") +
scale_shape_manual(values = c(0, 1, 2)) + labs(shape = "Replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p1_10 <- ggplot(data = b116_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0)  +
geom_line(data = b116_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0116") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p2_10 <-ggplot(data = b132_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0)  + geom_line(data = b132_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0132") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p3_10 <-ggplot(data = b141_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b141_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0141")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p4_10 <-ggplot(data = b166_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b166_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0166")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p5_10 <-ggplot(data = b180_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b180_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0180")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p6_10 <-ggplot(data = b184_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b184_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0184")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_plots_6c <- ggarrange(strain_p1_6 + rremove("ylab") + rremove("xlab"),
strain_p2_6 + rremove("ylab") + rremove("xlab"),
strain_p3_6 + rremove("ylab") + rremove("xlab"),
strain_p4_6 + rremove("ylab") + rremove("xlab"),
strain_p5_6 + rremove("ylab") + rremove("xlab"),
strain_p6_6 + rremove("ylab") + rremove("xlab"), ncol = 3, nrow = 2, common.legend = TRUE, legend = "right")
annotate_figure(strain_plots_6c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
annotate_figure(strain_plots_6c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
strain_plots_10c <- ggarrange(strain_p1_10 + rremove("ylab") + rremove("xlab"),
strain_p2_10 + rremove("ylab") + rremove("xlab"),
strain_p3_10 + rremove("ylab") + rremove("xlab"),
strain_p4_10 + rremove("ylab") + rremove("xlab"),
strain_p5_10 + rremove("ylab") + rremove("xlab"),
strain_p6_10 + rremove("ylab") + rremove("xlab"), ncol = 3, nrow = 2)
annotate_figure(strain_plots_10c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
annotate_figure(strain_plots_6c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
apc_p1_6 <- ggplot(data = l1, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l1_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 1, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p2_6 <- ggplot(data = l2, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l2_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 2, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p3_6 <- ggplot(data = l3, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l3_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 3, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p4_6 <- ggplot(data = l4, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l4_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 4, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p5_6 <- ggplot(data = l5, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l5_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 5, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p6_6 <- ggplot(data = l6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l6_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 6, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p7_10 <- ggplot(data = l7, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l7_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 7, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p8_10 <- ggplot(data = l8, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l8_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 8, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_plots <- ggarrange(apc_p1_6 + rremove("ylab") + rremove("xlab"),
apc_p2_6 + rremove("ylab") + rremove("xlab"),
apc_p3_6 + rremove("ylab") + rremove("xlab"),
apc_p4_6 + rremove("ylab") + rremove("xlab"),
apc_p5_6 + rremove("ylab") + rremove("xlab"),
apc_p6_6 + rremove("ylab") + rremove("xlab"),
apc_p7_10 + rremove("ylab") + rremove("xlab"),
apc_p8_10 + rremove("ylab") + rremove("xlab"), ncol = 4, nrow = 2, common.legend = TRUE, legend = "right")
pdf(paste("outputs/plots/apc_primary_model_plot_", date, ".pdf", sep = ""))
annotate_figure(apc_plots, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
pdf(paste("outputs/plots/10_strain_primary_model_plot_", date, ".pdf", sep = ""))
annotate_figure(strain_plots_10c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
pdf(paste("outputs/plots/6C_strain_primary_model_plot_", date, ".pdf", sep = ""))
annotate_figure(strain_plots_6c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
## ----------------------Packages-----------------------------------------------
#   Loading packages
library(tidyverse); library(dplyr); library(ggplot2); library(RColorBrewer); library(ggpubr); library(grid)
apc_strain_data <- read.csv("data/wrangled/2023_04_28_apc_strain_averaged_wrangled_03.csv", header = TRUE)
strain_param <- read.csv("outputs/parameters/primary_model_parameters_strain_averaged_2023_04_28.csv", header = TRUE)
apc_param <- read.csv("outputs/parameters/primary_model_parameters_apc_averaged_2023_04_28.csv", header = TRUE)
#Gompertz
gompertz <- function(day, log10n0, log10nmax, mumax, lag){
log10n <- log10n0 + (log10nmax - log10n0) * exp(-exp(mumax * exp(1) * (lag - day) / ((log10nmax - log10n0) * log(10)) + 1))
}
#Buchanan no lag
buchanan_no_lag <- function(day, log10n0, log10nmax, mumax){
log10n <- log10n0 + (day <= ((log10nmax - log10n0) * log(10) / mumax)) * mumax * day / log(10) + (day > ((log10nmax - log10n0) * log(10) / mumax)) * (log10nmax - log10n0)
}
## ----------------------Data Wrangling-----------------------------------------
apc_strain_data$biorep <- as.factor(apc_strain_data$biorep)
#Data is split into strain growth data and APC growth data
strain_data <- apc_strain_data %>%
dplyr::filter(media == "BHIrif")
apc_data <- apc_strain_data %>%
dplyr::filter(media == "BHI")
strains <- c("S12-0116", "S12-0132", "S12-0141")
for(i in 1:nrow(strain_data)){
if(strain_data$isolate[i] %in% strains & strain_data$biorep[i] == 2){
strain_data$biorep[i] <- 1
} else if(strain_data$isolate[i] %in% strains & strain_data$biorep[i] == 3){
strain_data$biorep[i] <- 2
} else if(strain_data$isolate[i] %in% strains & strain_data$biorep[i] == 4){
strain_data$biorep[i] <- 3
}
}
strain_data$biorep <- as.factor(strain_data$biorep)
#Subset strain data by isolate. Creating an empty vector for the predicted value, based on the primary model
b116_6_6 <- filter(strain_data, isolate ==  c("S12-0116")) %>%
filter(temperature == "6")
b132_6_6 <- filter(strain_data, isolate ==  c("S12-0132")) %>%
filter(temperature == "6")
b141_6_6 <- filter(strain_data, isolate ==  c("S12-0141")) %>%
filter(temperature == "6")
b166_6_6 <- filter(strain_data, isolate ==  c("S12-0166")) %>%
filter(temperature == "6")
b180_6_6 <- filter(strain_data, isolate ==  c("S12-0180")) %>%
filter(temperature == "6")
b184_6_6 <- filter(strain_data, isolate ==  c("S12-0184")) %>%
filter(temperature == "6")
b116_10 <- filter(strain_data, isolate ==  c("S12-0116")) %>%
filter(temperature == "10")
b132_10 <- filter(strain_data, isolate ==  c("S12-0132")) %>%
filter(temperature == "10")
b141_10 <- filter(strain_data, isolate ==  c("S12-0141")) %>%
filter(temperature == "10")
b166_10 <- filter(strain_data, isolate ==  c("S12-0166")) %>%
filter(temperature == "10")
b180_10 <- filter(strain_data, isolate ==  c("S12-0180")) %>%
filter(temperature == "10")
b184_10 <- filter(strain_data, isolate ==  c("S12-0184")) %>%
filter(temperature == "10")
#Subset apc data by isolate. Creating an empty vector for the predicted value, based on the primary model
set_1 <- c("S12-0116", "S12-0132", "S12-0141")
set_2 <- c("S12-0166", "S12-0180", "S12-0184")
l1 <- apc_data %>%
filter(isolate %in% set_1 & biorep == "2" & temperature == "6")
l2 <- apc_data %>%
filter(isolate %in% set_1 & biorep == "3" & temperature == "6")
l3 <- apc_data %>%
filter(isolate %in% set_1 & biorep == "4" & temperature == "6")
l4 <- apc_data %>%
filter(isolate %in% set_2 & biorep == "1" & temperature == "6") %>%
filter(time == "36")
l5 <- apc_data %>%
filter(isolate %in% set_2 & biorep == "2" & temperature == "6") %>%
filter(time == "36")
l6 <- apc_data %>%
filter(isolate %in% set_2 & biorep == "3" & temperature == "6") %>%
filter(time == "36")
l7 <- apc_data %>%
filter(isolate %in% set_1 & temperature == "10")
l8 <- apc_data %>%
filter(isolate %in% set_2 & temperature == "10") %>%
filter(time == "36")
#Strain: Creating a dataframe to calculate the predicted value based on the primary models
isolates_6 <- rep(c(rep(c("S12-0116", "S12-0132", "S12-0141"), each = 25), rep(c("S12-0166", "S12-0180", "S12-0184"), each = 31)), each = 1)
strain_day_6 <- c(rep(0:24, times = 3), rep(0:30, times = 3))
strain_temp_6 <- rep("6", times = length(isolates_6))
strain_predicted_concentration_6 <- vector(mode = "logical", length = length(isolates_6))
isolates_10 <- rep(c(rep(c("S12-0116", "S12-0132", "S12-0141"), each = 25), rep(c("S12-0166", "S12-0180", "S12-0184"), each = 31)), each = 1)
strain_day_10 <- rep(c(rep(0:24, times = 3), rep(0:30, times = 3)), each = 1)
strain_temp_10 <- rep("10", times = length(isolates_10))
strain_predicted_concentration_10 <- vector(mode = "logical", length = length(isolates_10))
strain_pred_6 <- bind_cols(isolates_6, strain_day_6, strain_temp_6, strain_predicted_concentration_6)
colnames(strain_pred_6) <- c("isolate", "day", "temp", "predicted_concentration")
strain_pred_10 <- bind_cols(isolates_10, strain_day_10, strain_temp_10, strain_predicted_concentration_10)
colnames(strain_pred_10) <- c("isolate", "day", "temp", "predicted_concentration")
strain_pred <- rbind(strain_pred_6, strain_pred_10)
#Strain: Populating the predicted value column for the data frame created above, based on the primary models
for(i in 1:nrow(strain_pred)){
row_index <- which(strain_param$isolate == strain_pred$isolate[i] & strain_param$temp == strain_pred$temp[i])
strain_pred$predicted_concentration[i] <- gompertz(strain_pred$day[i], strain_param$n0[row_index], strain_param$nmax[row_index], strain_param$mumax[row_index], strain_param$lag[row_index])
}
#APC: Creating a dataframe to calculate the predicted value based on the primary models
lots_6 <- rep(c(rep(c("1", "2", "3"), each = 25), rep(c("4", "5", "6"), each = 31)))
apc_day_6 <- c(rep(0:24, times = 3), rep(0:30, times = 3))
apc_temp_6 <- rep("6", times = length(lots_6))
apc_predicted_concentration_6 <- vector(mode = "logical", length = length(lots_6))
lots_10 <- rep(c(rep(c("7"), each = 25), rep(c("8"), each = 31)), each = 1)
apc_day_10 <- rep(c(rep(0:24, times = 1), rep(0:30, times = 1)), each = 1)
apc_temp_10 <- rep("10", times = length(lots_10))
apc_predicted_concentration_10 <- vector(mode = "logical", length = length(lots_10))
apc_pred_6 <- bind_cols(lots_6, apc_day_6, apc_temp_6, apc_predicted_concentration_6)
colnames(apc_pred_6) <- c("lot", "day", "temp", "predicted_concentration")
apc_pred_10 <- bind_cols(lots_10, apc_day_10, apc_temp_10, apc_predicted_concentration_10)
colnames(apc_pred_10) <- c("lot", "day", "temp", "predicted_concentration")
apc_pred <- rbind(apc_pred_6, apc_pred_10)
#APC: Populating the predicted value column for the data frame created above, based on the primary models
for(i in 1:nrow(apc_pred)){
row_index <- which(apc_param$lot == apc_pred$lot[i])
apc_pred$predicted_concentration[i] <- buchanan_no_lag(apc_pred$day[i], apc_param$n0[row_index], apc_param$nmax[row_index], apc_param$mumax[row_index])
}
b116_6_6_strain_pred <- filter(strain_pred, isolate ==  c("S12-0116")) %>%
filter(temp == "6")
b132_6_6_strain_pred <- filter(strain_pred, isolate ==  c("S12-0132")) %>%
filter(temp == "6")
b141_6_6_strain_pred <- filter(strain_pred, isolate ==  c("S12-0141")) %>%
filter(temp == "6")
b166_6_6_strain_pred <- filter(strain_pred, isolate ==  c("S12-0166")) %>%
filter(temp == "6")
b180_6_6_strain_pred <- filter(strain_pred, isolate ==  c("S12-0180")) %>%
filter(temp == "6")
b184_6_6_strain_pred <- filter(strain_pred, isolate ==  c("S12-0184")) %>%
filter(temp == "6")
b116_10_strain_pred <- filter(strain_pred, isolate ==  c("S12-0116")) %>%
filter(temp == "10")
b132_10_strain_pred <- filter(strain_pred, isolate ==  c("S12-0132")) %>%
filter(temp == "10")
b141_10_strain_pred <- filter(strain_pred, isolate ==  c("S12-0141")) %>%
filter(temp == "10")
b166_10_strain_pred <- filter(strain_pred, isolate ==  c("S12-0166")) %>%
filter(temp == "10")
b180_10_strain_pred <- filter(strain_pred, isolate ==  c("S12-0180")) %>%
filter(temp == "10")
b184_10_strain_pred <- filter(strain_pred, isolate ==  c("S12-0184")) %>%
filter(temp == "10")
l1_pred <- apc_pred %>%
filter(lot == 1)
l2_pred <- apc_pred %>%
filter(lot == 2)
l3_pred <- apc_pred %>%
filter(lot == 3)
l4_pred <- apc_pred %>%
filter(lot == 4)
l5_pred <- apc_pred %>%
filter(lot == 5)
l6_pred <- apc_pred %>%
filter(lot == 6)
l7_pred <- apc_pred %>%
filter(lot == 7)
l8_pred <- apc_pred %>%
filter(lot == 8)
strain_p1_6 <- ggplot(data = b116_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b116_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "S12-0116") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p2_6 <- ggplot(data = b132_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep))  +
geom_line(data = b132_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "S12-0132") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p3_6 <- ggplot(data = b141_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep))  +
geom_line(data = b141_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) +
labs(title = "S12-0141") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p4_6 <- ggplot(data = b166_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b166_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0166") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p5_6 <- ggplot(data = b180_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b180_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0180") +
scale_shape_manual(values = c(0, 1, 2)) +
labs(shape = "Biological replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p6_6 <- ggplot(data = b184_6_6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = biorep)) +
geom_line(data = b184_6_6_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0184") +
scale_shape_manual(values = c(0, 1, 2)) + labs(shape = "Replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p1_10 <- ggplot(data = b116_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0)  +
geom_line(data = b116_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0116") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p2_10 <-ggplot(data = b132_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0)  + geom_line(data = b132_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0132") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p3_10 <-ggplot(data = b141_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b141_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0141")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p4_10 <-ggplot(data = b166_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b166_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0166")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p5_10 <-ggplot(data = b180_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b180_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0180")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_p6_10 <-ggplot(data = b184_10, aes(x = day, y = log_average_wrangled_conc), shape = biorep) +
geom_point(shape = 0) +
geom_line(data = b184_10_strain_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = "FSL S12-0184")  +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
strain_plots_6c <- ggarrange(strain_p1_6 + rremove("ylab") + rremove("xlab"),
strain_p2_6 + rremove("ylab") + rremove("xlab"),
strain_p3_6 + rremove("ylab") + rremove("xlab"),
strain_p4_6 + rremove("ylab") + rremove("xlab"),
strain_p5_6 + rremove("ylab") + rremove("xlab"),
strain_p6_6 + rremove("ylab") + rremove("xlab"), ncol = 3, nrow = 2, common.legend = TRUE, legend = "right")
pdf("outputs/plots/6C_strain_primary_model_plot.pdf")
annotate_figure(strain_plots_6c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
pdf("outputs/plots/10_strain_primary_model_plot.pdf")
annotate_figure(strain_plots_10c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
strain_plots_10c <- ggarrange(strain_p1_10 + rremove("ylab") + rremove("xlab"),
strain_p2_10 + rremove("ylab") + rremove("xlab"),
strain_p3_10 + rremove("ylab") + rremove("xlab"),
strain_p4_10 + rremove("ylab") + rremove("xlab"),
strain_p5_10 + rremove("ylab") + rremove("xlab"),
strain_p6_10 + rremove("ylab") + rremove("xlab"), ncol = 3, nrow = 2)
pdf("outputs/plots/10_strain_primary_model_plot.pdf")
annotate_figure(strain_plots_10c, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
apc_p1_6 <- ggplot(data = l1, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l1_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 1, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p2_6 <- ggplot(data = l2, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l2_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 2, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p3_6 <- ggplot(data = l3, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l3_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 3, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p4_6 <- ggplot(data = l4, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l4_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 4, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p5_6 <- ggplot(data = l5, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l5_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 5, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p6_6 <- ggplot(data = l6, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l6_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 6, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p7_10 <- ggplot(data = l7, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l7_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 7, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_p8_10 <- ggplot(data = l8, aes(x = day, y = log_average_wrangled_conc)) +
geom_point(aes(shape = isolate)) +
geom_line(data = l8_pred, aes(x = day, y = predicted_concentration)) +
xlab("Day") + ylab(expression("Log"[10]*"CFU/g")) + labs(title = expression("Lot 8, 6"*~degree*"C")) +
scale_shape_manual(values = c(0, 1, 2), labels = c(1, 2, 3)) +
labs(shape = "Technical replicate") +
theme_bw() +
theme(plot.title = element_text(vjust = -1.5))
apc_plots <- ggarrange(apc_p1_6 + rremove("ylab") + rremove("xlab"),
apc_p2_6 + rremove("ylab") + rremove("xlab"),
apc_p3_6 + rremove("ylab") + rremove("xlab"),
apc_p4_6 + rremove("ylab") + rremove("xlab"),
apc_p5_6 + rremove("ylab") + rremove("xlab"),
apc_p6_6 + rremove("ylab") + rremove("xlab"),
apc_p7_10 + rremove("ylab") + rremove("xlab"),
apc_p8_10 + rremove("ylab") + rremove("xlab"), ncol = 4, nrow = 2, common.legend = TRUE, legend = "right")
pdf("outputs/plots/apc_primary_model_plot.pdf")
annotate_figure(apc_plots, left = textGrob(expression("Concentration, log"[10]*"CFU/g"), rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Day", gp = gpar(cex = 1)))
dev.off()
